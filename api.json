{
  "swagger": "2.0",
  "info": {
    "title": "Melinda RESTful API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://rest.api.melinda.kansalliskirjasto.fi/v1"
    }
  ],
  "tags": [
    {
      "name": "/bib",
      "description": "Operate on bibliographic records"
    },
    {
      "name": "/aut/names",
      "description": "Operate on name authority records"
    },
    {
      "name": "/aut/subjects",
      "description": "Operate on subject authority records"
    }
  ],
  "paths": {
    "/bib/records": {
      "post": {
        "summary": "Create a record",
        "tags": ["/bib"],
        "parameters": [
          {
            "name": "noop",
            "description": "Do not create the record",
            "in": "query",
            "type": "boolean",
            "default": false
          },
          {
            "name": "unique",
            "description": "Do not create the record if there are duplicates in the datastore",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "requestBody": {
          "description": "Contains a single record",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MarcRecord" }
            },
            "application/xml": {},
            "application/marc+xml": {},
            "application/vnd.oai.marcxml": {},
            "application/vnd.exlibris.alephsequential": {},
            "application/marc": {}
          }
        },
        "security": [{
          "httpBasic": []
          }],
          "responses": {
            "200": {
              "description": "The record was not actually created (The parameter **noop** was set to true)",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordModificationReport"
                  }
                }
              }
            },
            "201": {
              "description": "The record was created succesfully",
              "headers": {
                "Record-ID": {
                  "description": "The Record's identifier",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordModificationReport"
                  }
                }
              }
            },
            "400": {
              "description": "The record data is invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordModificationReport"
                  }
                }
              }
            },
            "401": {
              "description": "Credentials are invalid or missing"
            },
            "403": {
              "description": "The credentials are not authorized for this operation"
            },
            "409": {
              "description": "The record has a duplicate in the datastore and **unique** was set to true"
            }
          }
        }
      },
      "/bib/records/{id}": {
        "post": {
          "summary": "Update a record",
          "tags": ["/bib"],
          "parameters": [
            {
              "name": "id",
              "description": "The identifier of the record that's going to be updated",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "noop",
              "description": "Do not actually do the update the record",
              "in": "query",
              "type": "boolean",
              "default": false
            }
          ],
          "requestBody": {
            "description": "Contains a single record",
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MarcRecord" }
              },
              "application/xml": {},
              "application/marc+xml": {},
              "application/vnd.oai.marcxml": {},
              "application/vnd.exlibris.alephsequential": {},
              "application/marc": {}
            }
          },
          "security": [{
            "httpBasic": []
            }],
            "responses": {
              "200": {
                "description": "The record was updated successfully (Unless **noop** was set to true)",
                "content": {
                  "application/json": {
                    "schema": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/RecordModificationReport"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "record": {
                              "$ref":  "#/components/schemas/MarcRecord",
                              "required": "true"
                            },
                            "report": {
                              "$ref":  "#/components/schemas/RecordModificationReport"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "400": {
                "description": "The record data is invalid",
                "content": {
                  "application/json": {
                    "schema": { "$ref": "#/components/schemas/RecordModificationReport" }
                  }
                }
              },
              "401": {
                "description": "Credentials are invalid or missing"
              },
              "403": {
                "description": "The credentials are not authorized for this operation"
              },
              "404": {
                "description": "The record does not exist"
              },
              "409": {
                "description": "Record has changed in datastore and changes could not be synchronized"
              }
            }
          },
          "get": {
            "summary": "Retrieve a record",
            "tags": ["/bib"],
            "security": [
              {
                "httpBasic": []
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": { "$ref": "#/components/schemas/MarcRecord" }
                  },
                  "application/xml": {},
                  "application/marc+xml": {},
                  "application/vnd.oai.marcxml": {},
                  "application/vnd.exlibris.alephsequential": {},
                  "application/marc": {}
                },
                "headers": {
                  "Record-ID": {
                    "description": "Identifier of the record",
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              },
              "401": {
                "description": "Credentials are invalid or missing"
              },
              "403": {
                "description": "The credentials are not authorized for this operation"
              },
              "404": {
                "description": "The record does not exist"
              }
            }
          }
        },
        "/aut/names/records": {
          "post": {
            "summary": "Create a record",
            "tags": ["/aut/names"],
            "parameters": [
              {
                "name": "noop",
                "description": "Do not create the record but return the messages about the operation",
                "in": "query",
                "type": "boolean",
                "default": false
              },
              {
                "name": "unique",
                "description": "Do not create the record if there are duplicates in the datastore",
                "in": "query",
                "type": "boolean",
                "default": true
              }
            ],
            "requestBody": {
              "description": "Contains a single record",
              "required": true,
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/MarcRecord" }
                },
                "application/xml": {},
                "application/marc+xml": {},
                "application/vnd.oai.marcxml": {},
                "application/vnd.exlibris.alephsequential": {},
                "application/marc": {}
              }
            },
            "security": [{
              "httpBasic": []
              }],
              "responses": {
                "200": {
                  "description": "The record was not actually created (The parameter **noop** was set to true)",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RecordModificationReport"
                      }
                    }
                  }
                },
                "201": {
                  "description": "The record was created succesfully",
                  "headers": {
                    "Record-ID": {
                      "description": "The Record's identifier",
                      "schema": {
                        "type": "string"
                      }
                    }
                  },
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RecordModificationReport"
                      }
                    }
                  }
                },
                "400": {
                  "description": "The record data is invalid",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RecordModificationReport"
                      }
                    }
                  }
                },
                "401": {
                  "description": "Credentials are invalid or missing"
                },
                "403": {
                  "description": "The credentials are not authorized for this operation"
                },
                "409": {
                  "description": "The record has a duplicate in the datastore and **unique** was set to true"
                }
              }
            }
          },
          "/aut/names/records/{id}": {
            "post": {
              "summary": "Update a record",
              "tags": ["/aut/names"],
              "parameters": [
                {
                  "name": "id",
                  "description": "The identifier of the record that's going to be updated",
                  "in": "path",
                  "type": "string",
                  "required": true
                },
                {
                  "name": "noop",
                  "description": "Do not actually do the update the record",
                  "in": "query",
                  "type": "boolean",
                  "default": false
                }
              ],
              "requestBody": {
                "description": "Contains a single record",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": { "$ref": "#/components/schemas/MarcRecord" }
                  },
                  "application/xml": {},
                  "application/marc+xml": {},
                  "application/vnd.oai.marcxml": {},
                  "application/vnd.exlibris.alephsequential": {},
                  "application/marc": {}
                }
              },
              "security": [{
                "httpBasic": []
                }],
                "responses": {
                  "200": {
                    "description": "The record was updated successfully (Unless **noop** was set to true)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/RecordModificationReport"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "record": {
                                  "$ref":  "#/components/schemas/MarcRecord",
                                  "required": "true"
                                },
                                "report": {
                                  "$ref":  "#/components/schemas/RecordModificationReport"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "The record data is invalid",
                    "content": {
                      "application/json": {
                        "schema": { "$ref": "#/components/schemas/RecordModificationReport" }
                      }
                    }
                  },
                  "401": {
                    "description": "Credentials are invalid or missing"
                  },
                  "403": {
                    "description": "The credentials are not authorized for this operation"
                  },
                  "404": {
                    "description": "The record does not exist"
                  },
                  "409": {
                    "description": "Record has changed in datastore and changes could not be synchronized"
                  }
                }
              },
              "get": {
                "summary": "Retrieve a record",
                "tags": ["/aut/names"],
                "security": [
                  {
                    "httpBasic": []
                  }
                ],
                "responses": {
                  "200": {
                    "content": {
                      "application/json": {
                        "schema": { "$ref": "#/components/schemas/MarcRecord" }
                      },
                      "application/xml": {},
                      "application/marc+xml": {},
                      "application/vnd.oai.marcxml": {},
                      "application/vnd.exlibris.alephsequential": {},
                      "application/marc": {}
                    },
                    "headers": {
                      "Record-ID": {
                        "description": "Identifier of the record",
                        "schema": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "401": {
                    "description": "Credentials are invalid or missing"
                  },
                  "403": {
                    "description": "The credentials are not authorized for this operation"
                  },
                  "404": {
                    "description": "The record does not exist"
                  }
                }
              }
            },
            "/aut/subjects/records": {
              "post": {
                "summary": "Create a record",
                "tags": ["/aut/subjects"],
                "parameters": [
                  {
                    "name": "noop",
                    "description": "Do not create the record",
                    "in": "query",
                    "type": "boolean",
                    "default": false
                  },
                  {
                    "name": "unique",
                    "description": "Do not create the record if there are duplicates in the datastore",
                    "in": "query",
                    "type": "boolean",
                    "default": true
                  }
                ],
                "requestBody": {
                  "description": "Contains a single record",
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": { "$ref": "#/components/schemas/MarcRecord" }
                    },
                    "application/xml": {},
                    "application/marc+xml": {},
                    "application/vnd.oai.marcxml": {},
                    "application/vnd.exlibris.alephsequential": {},
                    "application/marc": {}  
                  }
                },
                "security": [{
                  "httpBasic": []
                  }],
                  "responses": {
                    "200": {
                      "description": "The record was not actually created (The parameter **noop** was set to true)",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/RecordModificationReport"
                          }
                        }
                      }
                    },
                    "201": {
                      "description": "The record was created succesfully",
                      "headers": {
                        "Record-ID": {
                          "description": "The Record's identifier",
                          "schema": {
                            "type": "string"
                          }
                        }
                      },
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/RecordModificationReport"
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "The record data is invalid",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/RecordModificationReport"
                          }
                        }
                      }
                    },
                    "401": {
                      "description": "Credentials are invalid or missing"
                    },
                    "403": {
                      "description": "The credentials are not authorized for this operation"
                    },
                    "409": {
                      "description": "The record has a duplicate in the datastore and **unique** was set to true"
                    }
                  }
                }
              },
              "/aut/subjects/records/{id}": {
                "post": {
                  "summary": "Update a record",
                  "tags": ["/aut/subjects"],
                  "parameters": [
                    {
                      "name": "id",
                      "description": "The identifier of the record that's going to be updated",
                      "in": "path",
                      "type": "string",
                      "required": true
                    },
                    {
                      "name": "noop",
                      "description": "Do not actually do the update the record",
                      "in": "query",
                      "type": "boolean",
                      "default": false
                    }
                  ],
                  "requestBody": {
                    "description": "Contains a single record",
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": { "$ref": "#/components/schemas/MarcRecord" }
                      },
                      "application/xml": {},
                      "application/marc+xml": {},
                      "application/vnd.oai.marcxml": {},
                      "application/vnd.exlibris.alephsequential": {},
                      "application/marc": {}
                    }
                  },
                  "security": [{
                    "httpBasic": []
                    }],
                    "responses": {
                      "200": {
                        "description": "The record was updated successfully (Unless **noop** was set to true)",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/RecordModificationReport"
                            }
                          }
                        }
                      },
                      "400": {
                        "description": "The record data is invalid",
                        "content": {
                          "application/json": {
                            "schema": { "$ref": "#/components/schemas/RecordModificationReport" }
                          }
                        }
                      },
                      "401": {
                        "description": "Credentials are invalid or missing"
                      },
                      "403": {
                        "description": "The credentials are not authorized for this operation"
                      },
                      "404": {
                        "description": "The record does not exist"
                      },
                      "409": {
                        "description": "Record has changed in datastore and changes could not be synchronized"                        
                      }
                    }
                  },
                  "get": {
                    "summary": "Retrieve a record",
                    "tags": ["/aut/subjects"],
                    "security": [
                      {
                        "httpBasic": []
                      }
                    ],
                    "responses": {
                      "200": {
                        "content": {
                          "application/json": {
                            "schema": { "$ref": "#/components/schemas/MarcRecord" }
                          },
                          "application/xml": {},
                          "application/marc+xml": {},
                          "application/vnd.oai.marcxml": {},
                          "application/vnd.exlibris.alephsequential": {},
                          "application/marc": {}  
                        },
                        "headers": {
                          "Record-ID": {
                            "description": "Identifier of the record",
                            "schema": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "401": {
                        "description": "Credentials are invalid or missing"
                      },
                      "403": {
                        "description": "The credentials are not authorized for this operation"
                      },
                      "404": {
                        "description": "The record does not exist"
                      }
                    }
                  }
                }
              },
              "components": {
                "securitySchemes": {
                  "httpBasic": {
                    "type": "http",
                    "scheme": "basic"
                  }
                },
                "schemas": {
                  "RecordModificationReport": {
                    "type": "object",
                    "properties": {
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["error", "warning", "info"],
                              "required": true
                            },
                            "message": {
                              "type": "string",
                              "required": true
                            },
                            "duplicates": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "messages": [
                        {
                          "type": "info",
                          "message": "foobar"
                        },
                        {
                          "type": "error",
                          "message": "The record has duplicates in the datastore",
                          "duplicates": ["123456", "789100"]
                        }
                      ]
                    }
                  },
                  "MarcRecord": {
                    "type": "object",
                    "properties": {
                      "leader": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "required": true,
                        "items": {
                          "type": "object",
                          "properties": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tag": {
                                    "type": "string",
                                    "required": true
                                  },
                                  "value": {
                                    "type": "string",
                                    "required": true
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "tag": {
                                    "type": "string",
                                    "required": true
                                  },
                                  "subfields": {
                                    "type": "array",
                                    "required": true,
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string",
                                          "required": true
                                        },
                                        "value": {
                                          "type": "string",
                                          "required": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "example": {
                      "fields": [{
                        "tag": "245",
                        "subfields": [
                          {
                            "code": "a",
                            "value": "foo"
                          }
                        ]
                        }]
                      }
                    }
                  }
                }
              }
